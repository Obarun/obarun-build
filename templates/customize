#!/usr/bin/bash
#
# This script is used by cont_create script for customize the fresh container 
#
# Authors:
# Eric Vidal <eric@obarun.org>
#
# Copyright (C) 2016 Eric Vidal <eric@obarun.org>
#
# "THE BEERWARE LICENSE" (Revision 42):
# <eric@obarun.org> wrote this file.  As long as you retain this notice you
# can do whatever you want with this stuff. If we meet some day, and you think
# this stuff is worth it, you can buy me a beer in return.   Eric Vidal http://obarun.org
#
# This script is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 


##		Check is the functions file exits
sourcing(){
	
	local list
	
	for list in /tmp/obarun-build-tmp/{build.conf,create.conf,common_functions} ; do
		if [[ -f "${list}" ]]; then
			source "${list}"
		else
			echo_error " Missing file : ${list}"
			exit	
		fi
	done
	
	unset list
}
sourcing

shellopts_save
shellopts_set_unset "extglob" 0

custo_once() {
	
	local _tmp
	_tmp="${SOURCES_FUNC}"
	
	if [[ ! -d $_tmp ]]; then
		mkdir -p -m0750 $_tmp || die " Impossible to create $_tmp"
	fi
    if [[ ! -e $_tmp/customize.${1} ]]; then
        $1 || die " Cannot execute $_"
        touch $_tmp/customize.${1}
    fi
    unset _tmp
    
}

config_hostname(){
	
	echo_display " Define hostname as : ${HOSTNAME}"
	if [[ -n "$HOSTNAME" ]]; then
		sed -i 's/ .*$//' /etc/hosts || die " Impossible to define hosts"
	fi

	sed -i "s/HOSTNAME=.*$/HOSTNAME=$HOSTNAME/g" /etc/s6/s6.conf || die " Impossible to define hostname on s6.conf"
	
	echo "$HOSTNAME" > /etc/hostname || die " Impossible to define hostname"
	sed -i '/127.0.0.1/s/$/ '$HOSTNAME'/' /etc/hosts || die " Impossible to define hosts"
	sed -i '/::1/s/$/ '$HOSTNAME'/' /etc/hosts || die " Impossible to define hosts"
	
	echo_valid " hostname was configured successfully"
	
}
custo_once config_hostname

config_locale(){
	
	echo_display " Define locale"
	locale-gen || die " Impossible to launch locale-gen"
	echo LANG="$LOCALE" > /etc/locale.conf || die " Impossible to define locale.conf"
    echo LC_COLLATE=C >> /etc/locale.conf || die " Impossible to define locale.conf"
	
	echo_valid " Locale was created successfully"
	
}
custo_once config_locale

config_localetime(){
	
	echo_display " Define localtime"
	if [[ "$SUBZONE" != "" ]]; then
		ln -sf /usr/share/zoneinfo/$ZONE/$SUBZONE /etc/localtime || die " Impossible to define localtime"
		sed -i "s/TZ=.*$/TZ=$ZONE\/$SUBZONE/g" /etc/s6/s6.conf || die " Impossible to define localtime on s6.conf"
				
	else
		ln -sf /usr/share/zoneinfo/$ZONE /etc/localtime || die " Impossible to define localtime"
		sed -i "s/TZ=.*$/TZ=$ZONE/g" /etc/s6/s6.conf || die " Impossible to define localtime on s6.conf"
	fi
	
	echo_valid " Localetime was configured successfully"
	
}
custo_once config_localetime

config_keymap(){
	
	echo_display " Define keymap" 
	sed -i "s,KEYMAP=.*$,KEYMAP=$ZONE,g" /etc/s6/s6.conf || die " Impossible to set ${keymap} on s6.conf"
		
	echo_valid " Console keymap was configured successfully"
	
}
custo_once config_keymap

config_user(){
	
	echo_display " Define ${NEWUSER}"
	
	user_add "${NEWUSER}"
	
	echo "${NEWUSER}:${PASSW_USER}" | chpasswd || die " Failed to change $newuser password"
	
	echo_valid " User ${NEWUSER} was created successfully" 
	
}
custo_once config_user

config_root(){
	
	echo_display " Define root"

	echo "root:${PASSW_ROOT}" | chpasswd || die " Failed to change root password"
	
	echo_valid " root user was configured successfully" 
	
}
custo_once config_root

add_at_logroup(){
	
	echo_display " add $NEWUSER at log group"
	#gpasswd -a root log || die " Impossible to add root at log group"
	gpasswd -a "$NEWUSER" log || die " Impossible to add user ${newuser} at log group"
	
}
custo_once add_at_logroup 

shellopts_restore
	
echo_display " Customization terminate"

